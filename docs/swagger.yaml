basePath: /
<<<<<<< HEAD
=======
definitions:
  controllers.ErrorResponse:
    properties:
      error:
        description: Описание возникшей ошибки...
        type: string
    type: object
  controllers.accessTokenResponse:
    properties:
      access_token:
        description: JWT токен для аутентификации пользователя...
        type: string
    type: object
  models.Category:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        description: Уникальный идентификатор категории товара.
        type: integer
      is_deleted:
        type: boolean
      title:
        description: Название категории товара.
        type: string
      updated_at:
        type: string
    type: object
  models.Order:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      order_items:
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
      payment_status:
        description: Статус оплаты.
        type: string
      total_amount:
        description: Общая сумма заказа.
        type: number
      updated_at:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/models.User'
        description: Связи
      user_id:
        description: Внешний ключ на продавца.
        type: integer
    type: object
  models.OrderItem:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      order:
        allOf:
        - $ref: '#/definitions/models.Order'
        description: Связи
      order_id:
        description: Внешний ключ на заказ.
        type: integer
      price:
        description: Цена товара в момент продажи.
        type: number
      product:
        $ref: '#/definitions/models.Product'
      product_id:
        description: Внешний ключ на продукт.
        type: integer
      quantity:
        description: Количество товара в заказе.
        type: integer
      updated_at:
        type: string
    type: object
  models.Product:
    properties:
      barcode:
        description: Штрих-код товара.
        type: string
      category:
        allOf:
        - $ref: '#/definitions/models.Category'
        description: Связь с таблицей категорий.
      category_id:
        description: Внешний ключ на категорию товара.
        type: integer
      created_at:
        description: Время создания записи.
        type: string
      deleted_at:
        description: Время удаления записи.
        type: string
      discount:
        description: Размер скидки на товар.
        type: number
      discount_details:
        description: Детали скидки.
        type: string
      expiration_date:
        description: Дата истечения срока годности.
        type: string
      id:
        description: Уникальный идентификатор товара.
        type: integer
      is_deleted:
        description: Флаг удаления товара.
        type: boolean
      is_excise_applicable:
        description: Применяется ли акциз.
        type: boolean
      is_paid_to_supplier:
        description: Оплачен ли товар поставщику.
        type: boolean
      is_vat_applicable:
        description: Применяется ли НДС.
        type: boolean
      orders:
        description: Связь с таблицей заказов.
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
      quantity:
        description: Общее количество товара.
        type: number
      retail_price:
        description: Розничная цена товара.
        type: number
      stock:
        description: Остаток товара на складе.
        type: number
      storage_location:
        description: Место хранения на складе.
        type: string
      supplier:
        allOf:
        - $ref: '#/definitions/models.Supplier'
        description: Связи
      supplier_id:
        description: Внешний ключ на поставщика.
        type: integer
      supplier_price:
        description: Цена товара у поставщика.
        type: number
      title:
        description: Название товара.
        type: string
      total_price:
        description: Общая цена товара.
        type: number
      unit:
        description: Единица измерения товара.
        type: string
      updated_at:
        description: Время последнего обновления записи.
        type: string
    type: object
  models.SignInInput:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.Supplier:
    properties:
      contact_info:
        description: Контактная информация.
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      name:
        description: Название или имя поставщика.
        type: string
      products:
        description: Связи
        items:
          $ref: '#/definitions/models.Product'
        type: array
      updated_at:
        type: string
    type: object
  models.SwagUser:
    properties:
      email:
        description: Адрес электронной почты пользователя...
        type: string
      full_name:
        description: Полное имя пользователя...
        type: string
      password:
        description: Пароль для аутентификации...
        type: string
      username:
        description: Логин для входа в систему...
        type: string
    type: object
  models.User:
    properties:
      blocked_at:
        description: Время блокировки продавца...
        type: string
      created_at:
        description: Время создания записи...
        type: string
      deleted_at:
        description: Время удаления записи...
        type: string
      email:
        description: Email продавца...
        type: string
      full_name:
        description: Полное имя продавца...
        type: string
      id:
        description: Уникальный идентификатор продавца...
        type: integer
      is_blocked:
        description: Заблокирован ли продавец...
        type: boolean
      is_deleted:
        description: Флаг удаления записи...
        type: boolean
      orders:
        description: Связи
        items:
          $ref: '#/definitions/models.Order'
        type: array
      password:
        description: Пароль продавца...
        type: string
      password_reset_required:
        description: Флаг обязательной смены пароля после сброса...
        type: boolean
      role:
        description: 'Роль продавца (например: ''admin'', ''manager'', ''seller'')...'
        type: string
      updated_at:
        description: Время последнего обновления записи...
        type: string
      username:
        description: Логин продавца...
        type: string
    type: object
>>>>>>> main
host: localhost:8585
info:
  contact: {}
  description: API Server for eShop Application
  title: eShop API
<<<<<<< HEAD
  version: "0.0001"
paths: {}
=======
  version: "0.0002"
paths:
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Autentifications user and get token...
      operationId: sign-in
      parameters:
      - description: Data for login and password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: access_token
          schema:
            $ref: '#/definitions/controllers.accessTokenResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Enter to System
      tags:
      - auth
  /users:
    get:
      description: GetAllUsers
      operationId: get-all-users
      produces:
      - application/json
      responses:
        "200":
          description: Список пользователей
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAllUsers
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create User
      operationId: create-account
      parameters:
      - description: User Information
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SwagUser'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully!!!
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "403":
          description: Permission denied. Only Admin can create users...
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create User
      tags:
      - users
>>>>>>> main
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
